name: Deploy Production

on:
  push:
    branches: [ "main" ]

jobs:
  build_and_test:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.11]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
    
    - name: Run Tests
      run: |
        python manage.py test
 
  push_to_docker_hub_registry:
      
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.11]
    needs: build_and_test

    steps:
    - uses: actions/checkout@v4

    - name: Log in to Docker Hub
      run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASS }}

    - name: Build and push Docker image
      run: |
        docker build -t hernansaa/crypto-portfolio-manager:latest .
        docker push hernansaa/crypto-portfolio-manager:latest

  
  deploy_to_digitalocean:
      
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.11]
    needs: push_to_docker_hub_registry

    steps:
    
    - uses: actions/checkout@v4
    
    - name: Copies docker-compose-prod file to VPS via SSH
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.DIGITALOCEAN_HOST }}
        username: ${{ secrets.DIGITALOCEAN_USER }}
        key: ${{ secrets.DIGITALOCEAN_KEY }}
        port: ${{ secrets.DIGITALOCEAN_PORT }}
        source: "docker-compose-prod.yml"
        target: ~/crypto-portfolio-manager/
    
    - name: Copies nginx Dockerfile to VPS via SSH
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.DIGITALOCEAN_HOST }}
        username: ${{ secrets.DIGITALOCEAN_USER }}
        key: ${{ secrets.DIGITALOCEAN_KEY }}
        port: ${{ secrets.DIGITALOCEAN_PORT }}
        source: "nginx/Dockerfile, nginx/default.conf"
        target: ~/crypto-portfolio-manager/
    
    - name: Generate .env.prod file dinamically on VPS via SSH
      uses: appleboy/ssh-action@v1.1.0
      with:
        host: ${{ secrets.DIGITALOCEAN_HOST }}
        username: ${{ secrets.DIGITALOCEAN_USER }}
        key: ${{ secrets.DIGITALOCEAN_KEY }}
        port: ${{ secrets.DIGITALOCEAN_PORT }}
        script: |
          echo "SQL_ENGINE=${{ secrets.SQL_ENGINE }}" >> ~/crypto-portfolio-manager/.env.prod
          echo "SQL_DATABASE=${{ secrets.SQL_DATABASE }}" >> ~/crypto-portfolio-manager/.env.prod
          echo "SQL_USER=${{ secrets.SQL_USER }}" >> ~/crypto-portfolio-manager/.env.prod
          echo "SQL_PASSWORD=${{ secrets.SQL_PASSWORD }}" >> ~/crypto-portfolio-manager/.env.prod
          echo "SQL_HOST=${{ secrets.SQL_HOST }}" >> ~/crypto-portfolio-manager/.env.prod
          echo "SQL_PORT=${{ secrets.SQL_PORT }}" >> ~/crypto-portfolio-manager/.env.prod
          echo "ENV=PROD" >> ~/crypto-portfolio-manager/.env.prod
          echo "CSRF_TRUSTED_ORIGINS=http://localhost http://127.0.0.1 http://[::1] http://0.0.0.0 http://165.232.87.96 http://165.232.87.96:8000" >> ~/crypto-portfolio-manager/.env.prod
          echo "DEBUG=0" >> ~/crypto-portfolio-manager/.env.prod
          echo "SECRET_KEY=foo" >> ~/crypto-portfolio-manager/.env.prod
          echo "DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1] 0.0.0.0 165.232.87.96 165.232.87.96:8000" >> ~/crypto-portfolio-manager/.env.prod

      
    - name: Install Docker and run docker compose file via SSH
      uses: appleboy/ssh-action@v1.1.0
      with:
        host: ${{ secrets.DIGITALOCEAN_HOST }}
        username: ${{ secrets.DIGITALOCEAN_USER }}
        key: ${{ secrets.DIGITALOCEAN_KEY }}
        port: ${{ secrets.DIGITALOCEAN_PORT }}
        script: |
          # Check if Docker is installed
          if ! command -v docker &> /dev/null; then
            echo "Docker not found. Installing Docker..."

            # Update package index and install dependencies
            sudo apt-get -y update
            sudo apt install -y apt-transport-https ca-certificates curl software-properties-common
            
            # Add Docker GPG key and repository
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
            sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
            
            # Update package index again after adding Docker repository
            sudo apt-get -y update
            
            # Install Docker
            sudo apt install -y docker-ce
            
            # Check Docker status
            sudo systemctl status docker
          else
            # Check Docker status
            sudo systemctl status docker
            echo "Docker is already installed."
          fi

          # Run Docker Compose with updated environment variables
          sudo docker compose -f ~/crypto-portfolio-manager/docker-compose-prod.yml pull
          sudo docker compose -f ~/crypto-portfolio-manager/docker-compose-prod.yml up -d --build --force-recreate