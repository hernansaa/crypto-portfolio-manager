name: Deploy Production

on:
  push:
    branches: [ "main" ]

jobs:
  build_and_test:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.11]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    # - name: Run Tests
    #   run: |
    #     python manage.py test
 
        
  push_to_docker_hub_registry:
      
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.11]
    needs: build_and_test

    steps:
    - uses: actions/checkout@v4

    - name: Log in to Docker Hub
      run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASS }}

    - name: Build and push Docker image
      run: |
        docker build -t hernansaa/crypto-portfolio-manager:latest .
        docker push hernansaa/crypto-portfolio-manager:latest

  
  deploy_to_digitalocean:
      
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.11]
    needs: push_to_docker_hub_registry

    steps:

    - name: SSH to Digital Ocean
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.DIGITALOCEAN_HOST }}
        username: ${{ secrets.DIGITALOCEAN_USER }}
        key: ${{ secrets.DIGITALOCEAN_KEY }}
        port: ${{ secrets.DIGITALOCEAN_PORT }}
        source: "docker-compose.prod.yml"  # Adjust the path if necessary
        target: "~/app/docker-compose.prod.yml"  # Target path on the server
      
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@v1.1.0
      with:
        host: ${{ secrets.DIGITALOCEAN_HOST }}
        username: ${{ secrets.DIGITALOCEAN_USER }}
        key: ${{ secrets.DIGITALOCEAN_KEY }}
        port: ${{ secrets.DIGITALOCEAN_PORT }}
        script: |
          sudo apt-get -y update
          sudo apt install -y apt-transport-https ca-certificates curl software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
          apt-cache policy docker-ce
          sudo apt install -y docker-ce
          sudo systemctl status docker
          
          # Stop and remove any existing container with the same name
          if [ "$(sudo docker ps -aq -f name=crypto-portfolio-manager)" ]; then
            sudo docker stop crypto-portfolio-manager
            sudo docker rm crypto-portfolio-manager
          fi
          
          # Remove any existing image for a clean pull
          if [ "$(sudo docker images -q hernansaa/crypto-portfolio-manager:latest)" ]; then
            sudo docker rmi -f hernansaa/crypto-portfolio-manager:latest
          fi
          
          # Pull and run the latest image
          sudo docker pull hernansaa/crypto-portfolio-manager
          # sudo docker run -d -p 8000:8000 --name crypto-portfolio-manager hernansaa/crypto-portfolio-manager:latest /bin/sh -c "python manage.py runserver 0.0.0.0:8000"
          sudo docker compose -f docker-compose.prod.yml up -d --build